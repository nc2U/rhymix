name: Source Upload [NFS]

on:
  push:
    paths:
      - "app/**"
      - ".github/workflows/source_upload.yml"
    branches: [ "main" ]
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# job은 사용자가 정한 플랫폼을 통해 steps 라는 일련의 과정을 실행.
# 여러 개의 job 을 사용할 수 있으며, 여러 개의 job 을 사용할 때는 서로 정보도 교환 가능.
# 각각 독립적으로도 실행 가능.
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
      # 레파지터리 체크 아웃
      - name: Check out source code
        uses: actions/checkout@v4
      
      # Source code to server copy transfer
      - name: Copy app, etc data to NFS server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.NFS_HOST }}
          username: ${{ secrets.NFS_USER }}
          password: ${{ secrets.NFS_PASS }}
          source: 'app/custom'
          target: ${{ secrets.NFS_PATH }}/
      
      # web pod --> rhymix source link update
      - name: Custom source link to rhymix
        uses: garygrossgarten/github-action-ssh@release
        with:
          host: ${{ secrets.NFS_HOST }}
          username: ${{ secrets.NFS_USER }}
          password: ${{ secrets.NFS_PASS }}
          command: |
            cd ${{ secrets.NFS_PATH }}/app/_rhymix
            if [ ! -d ".git" ]; then
              git clone https://github.com/rhymix/rhymix.git .
            else
              git pull origin master
            fi
            # Create and set permissions for files directory (with sudo session)
            echo '${{ secrets.NFS_PASS }}' | sudo -S -v  # Authenticate once
            if [ ! -d "${{ secrets.NFS_PATH }}/files" ]; then
              echo "Creating files directory..."
              sudo mkdir -p ${{ secrets.NFS_PATH }}/files
            fi
            echo "Setting files directory permissions to 777..."
            sudo chmod 777 ${{ secrets.NFS_PATH }}/files
            # Fix all permissions: files=644, directories=755
            sudo find . -type f -exec chmod 644 {} \;
            sudo find . -type d -exec chmod 755 {} \;
      
      # slack --> notification
      - name: Send slack when failed
        if: ${{ failure() }}                    # 실패했을 때 실행
        uses: ./.github/actions/slack-notify    # 직접 '만든' Action이므로 uses 키워드를 이용해서 아래 경로를 입력해줍니다.
        with:
          slack_incoming_url: ${{ secrets.SLACK_INCOMING_URL }}
      
      - name: Send slack if completed
        if: ${{ success() }}                    # 성공할 때만 실행
        uses: ./.github/actions/slack-notify
        with:
          status: success   # status input은 받는 쪽에서 default 값을 정해놨기 때문에 success일 때만 전달.
          slack_incoming_url: ${{ secrets.SLACK_INCOMING_URL }}
