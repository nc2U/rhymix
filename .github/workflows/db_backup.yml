name: Database Backup

on:
  schedule:
    - cron: "0 */6 * * *"
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# job은 사용자가 정한 플랫폼을 통해 steps 라는 일련의 과정을 실행.
# 여러 개의 job 을 사용할 수 있으며, 여러 개의 job 을 사용할 때는 서로 정보도 교환 가능.
# 각각 독립적으로도 실행 가능.
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      # 레파지터리 체크 아웃
      - name: Check out source code
        uses: actions/checkout@v4

      # data to server copy transfer
      - name: Copy backup script to NFS server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.NFS_HOST }}
          username: ${{ secrets.NFS_USER }}
          password: ${{ secrets.NFS_PASS }}
          source: 'volume/backups/*.sh'
          target: ${{ secrets.NFS_PATH }}/
          rm: true

      # mysql pod --> database bakcup
      - name: database backup
        uses: garygrossgarten/github-action-ssh@release
        with:
          host: ${{ secrets.CICD_HOST }}
          username: ${{ secrets.CICD_USER }}
          password: ${{ secrets.CICD_PASS }}
          command: |
            if kubectl get pod -n rhymix mariadb-0 >/dev/null 2>&1; then
              kubectl exec -it -n rhymix mariadb-0 -- sh /var/backups/dump_mariadb.sh
            fi

      # slack --> notification
      - name: Send slack when failed
        if: ${{ failure() }}                    # 실패했을 때 실행
        uses: ./.github/actions/slack-notify    # 직접 '만든' Action이므로 uses 키워드를 이용해서 아래 경로를 입력해줍니다.
        with:
          slack_incoming_url: ${{ secrets.SLACK_INCOMING_URL }}
